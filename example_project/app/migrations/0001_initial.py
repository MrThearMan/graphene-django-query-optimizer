# Generated by Django 4.2.15 on 2024-08-23 14:50

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="Apartment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("completion_date", models.DateField(null=True)),
                ("street_address", models.CharField(max_length=200)),
                ("stair", models.CharField(max_length=16)),
                ("floor", models.IntegerField(null=True)),
                ("apartment_number", models.PositiveIntegerField()),
                ("shares_start", models.PositiveIntegerField(null=True)),
                ("shares_end", models.PositiveIntegerField(null=True)),
                (
                    "surface_area",
                    models.DecimalField(decimal_places=2, max_digits=9, null=True),
                ),
                ("rooms", models.PositiveIntegerField(null=True)),
            ],
            options={
                "verbose_name": "Apartment",
                "verbose_name_plural": "Apartments",
                "ordering": ["pk"],
            },
        ),
        migrations.CreateModel(
            name="Building",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("street_address", models.CharField(max_length=200)),
            ],
            options={
                "verbose_name": "Building",
                "verbose_name_plural": "Buildings",
                "ordering": ["pk"],
            },
        ),
        migrations.CreateModel(
            name="Developer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True)),
            ],
            options={
                "verbose_name": "Developer",
                "verbose_name_plural": "Developers",
                "ordering": ["pk"],
            },
        ),
        migrations.CreateModel(
            name="Example",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
            options={
                "ordering": ["pk"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ForwardManyToMany",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
            options={
                "ordering": ["pk"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ForwardManyToManyForRelated",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
            options={
                "ordering": ["pk"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ForwardManyToOne",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "forward_many_to_many_fields",
                    models.ManyToManyField(
                        related_name="forward_many_to_one_rels",
                        to="app.forwardmanytomanyforrelated",
                    ),
                ),
            ],
            options={
                "ordering": ["pk"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ForwardManyToOneForRelated",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
            options={
                "ordering": ["pk"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ForwardOneToOne",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "forward_many_to_many_fields",
                    models.ManyToManyField(
                        related_name="forward_one_to_one_rels",
                        to="app.forwardmanytomanyforrelated",
                    ),
                ),
                (
                    "forward_many_to_one_field",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="forward_one_to_one_rels",
                        to="app.forwardmanytooneforrelated",
                    ),
                ),
            ],
            options={
                "ordering": ["pk"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ForwardOneToOneForRelated",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
            options={
                "ordering": ["pk"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="HousingCompany",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("street_address", models.CharField(max_length=200)),
                ("city", models.CharField(max_length=200)),
                ("developers", models.ManyToManyField(to="app.developer")),
            ],
            options={
                "verbose_name": "Housing company",
                "verbose_name_plural": "Housing companies",
                "ordering": ["pk"],
            },
        ),
        migrations.CreateModel(
            name="Owner",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=256)),
                ("identifier", models.CharField(blank=True, max_length=11, null=True)),
                ("email", models.EmailField(blank=True, max_length=200, null=True)),
                ("phone", models.CharField(blank=True, max_length=50, null=True)),
                ("pets", models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Owner",
                "verbose_name_plural": "Owners",
                "ordering": ["pk"],
            },
        ),
        migrations.CreateModel(
            name="ReverseManyToMany",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "example_fields",
                    models.ManyToManyField(related_name="reverse_many_to_many_rels", to="app.example"),
                ),
                (
                    "forward_many_to_many_fields",
                    models.ManyToManyField(
                        related_name="reverse_many_to_many_rels",
                        to="app.forwardmanytomanyforrelated",
                    ),
                ),
                (
                    "forward_many_to_one_field",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reverse_many_to_many_rels",
                        to="app.forwardmanytooneforrelated",
                    ),
                ),
                (
                    "forward_one_to_one_field",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reverse_many_to_many_rel",
                        to="app.forwardonetooneforrelated",
                    ),
                ),
            ],
            options={
                "ordering": ["pk"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ReverseOneToMany",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "example_field",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reverse_one_to_many_rels",
                        to="app.example",
                    ),
                ),
                (
                    "forward_many_to_many_fields",
                    models.ManyToManyField(
                        related_name="reverse_one_to_many_rels",
                        to="app.forwardmanytomanyforrelated",
                    ),
                ),
                (
                    "forward_many_to_one_field",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reverse_one_to_many_rels",
                        to="app.forwardmanytooneforrelated",
                    ),
                ),
                (
                    "forward_one_to_one_field",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reverse_one_to_many_rel",
                        to="app.forwardonetooneforrelated",
                    ),
                ),
            ],
            options={
                "ordering": ["pk"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ReverseOneToOne",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "example_field",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reverse_one_to_one_rel",
                        to="app.example",
                    ),
                ),
                (
                    "forward_many_to_many_fields",
                    models.ManyToManyField(
                        related_name="reverse_one_to_one_rels",
                        to="app.forwardmanytomanyforrelated",
                    ),
                ),
                (
                    "forward_many_to_one_field",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reverse_one_to_one_rels",
                        to="app.forwardmanytooneforrelated",
                    ),
                ),
                (
                    "forward_one_to_one_field",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reverse_one_to_one_rel",
                        to="app.forwardonetooneforrelated",
                    ),
                ),
            ],
            options={
                "ordering": ["pk"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tag", models.SlugField()),
                ("object_id", models.CharField(max_length=255)),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Sale",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("purchase_date", models.DateField(editable=False)),
                (
                    "purchase_price",
                    models.DecimalField(decimal_places=2, editable=False, max_digits=12),
                ),
                (
                    "apartment",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sales",
                        to="app.apartment",
                    ),
                ),
            ],
            options={
                "verbose_name": "Sale",
                "verbose_name_plural": "Sales",
                "ordering": ["pk"],
            },
        ),
        migrations.CreateModel(
            name="ReverseOneToOneToReverseOneToOne",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "reverse_one_to_one_field",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reverse_one_to_one_rel",
                        to="app.reverseonetoone",
                    ),
                ),
            ],
            options={
                "ordering": ["pk"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ReverseOneToOneToReverseOneToMany",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "reverse_many_to_one_field",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reverse_one_to_one_rel",
                        to="app.reverseonetomany",
                    ),
                ),
            ],
            options={
                "ordering": ["pk"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ReverseOneToOneToReverseManyToMany",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "reverse_many_to_many_field",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reverse_one_to_one_rel",
                        to="app.reversemanytomany",
                    ),
                ),
            ],
            options={
                "ordering": ["pk"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ReverseOneToOneToForwardOneToOne",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "forward_one_to_one_field",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reverse_one_to_one_rel",
                        to="app.forwardonetoone",
                    ),
                ),
            ],
            options={
                "ordering": ["pk"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ReverseOneToOneToForwardManyToOne",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "forward_many_to_one_field",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reverse_one_to_one_rel",
                        to="app.forwardmanytoone",
                    ),
                ),
            ],
            options={
                "ordering": ["pk"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ReverseOneToOneToForwardManyToMany",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "forward_many_to_many_field",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reverse_one_to_one_rel",
                        to="app.forwardmanytomany",
                    ),
                ),
            ],
            options={
                "ordering": ["pk"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ReverseOneToManyToReverseOneToOne",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "reverse_one_to_one_field",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reverse_one_to_many_rels",
                        to="app.reverseonetoone",
                    ),
                ),
            ],
            options={
                "ordering": ["pk"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ReverseOneToManyToReverseOneToMany",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "reverse_many_to_one_field",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reverse_one_to_many_rels",
                        to="app.reverseonetomany",
                    ),
                ),
            ],
            options={
                "ordering": ["pk"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ReverseOneToManyToReverseManyToMany",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "reverse_many_to_many_field",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reverse_one_to_many_rels",
                        to="app.reversemanytomany",
                    ),
                ),
            ],
            options={
                "ordering": ["pk"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ReverseOneToManyToForwardOneToOne",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "forward_one_to_one_field",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reverse_one_to_many_rels",
                        to="app.forwardonetoone",
                    ),
                ),
            ],
            options={
                "ordering": ["pk"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ReverseOneToManyToForwardManyToOne",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "forward_many_to_one_field",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reverse_one_to_many_rels",
                        to="app.forwardmanytoone",
                    ),
                ),
            ],
            options={
                "ordering": ["pk"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ReverseOneToManyToForwardManyToMany",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "forward_many_to_many_field",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reverse_one_to_many_rels",
                        to="app.forwardmanytomany",
                    ),
                ),
            ],
            options={
                "ordering": ["pk"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ReverseManyToManyToReverseOneToOne",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "reverse_one_to_one_fields",
                    models.ManyToManyField(
                        related_name="reverse_many_to_many_rels",
                        to="app.reverseonetoone",
                    ),
                ),
            ],
            options={
                "ordering": ["pk"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ReverseManyToManyToReverseOneToMany",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "reverse_many_to_one_fields",
                    models.ManyToManyField(
                        related_name="reverse_many_to_many_rels",
                        to="app.reverseonetomany",
                    ),
                ),
            ],
            options={
                "ordering": ["pk"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ReverseManyToManyToReverseManyToMany",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "reverse_many_to_many_fields",
                    models.ManyToManyField(
                        related_name="reverse_many_to_many_rels",
                        to="app.reversemanytomany",
                    ),
                ),
            ],
            options={
                "ordering": ["pk"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ReverseManyToManyToForwardOneToOne",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "forward_one_to_one_fields",
                    models.ManyToManyField(
                        related_name="reverse_many_to_many_rels",
                        to="app.forwardonetoone",
                    ),
                ),
            ],
            options={
                "ordering": ["pk"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ReverseManyToManyToForwardManyToOne",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "forward_many_to_one_fields",
                    models.ManyToManyField(
                        related_name="reverse_many_to_many_rels",
                        to="app.forwardmanytoone",
                    ),
                ),
            ],
            options={
                "ordering": ["pk"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ReverseManyToManyToForwardManyToMany",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "forward_many_to_many_fields",
                    models.ManyToManyField(
                        related_name="reverse_many_to_many_rels",
                        to="app.forwardmanytomany",
                    ),
                ),
            ],
            options={
                "ordering": ["pk"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="RealEstate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                (
                    "surface_area",
                    models.DecimalField(decimal_places=2, max_digits=9, null=True),
                ),
                (
                    "housing_company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="real_estates",
                        to="app.housingcompany",
                    ),
                ),
            ],
            options={
                "verbose_name": "Real estate",
                "verbose_name_plural": "Real estates",
                "ordering": ["pk"],
            },
        ),
        migrations.CreateModel(
            name="PropertyManager",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=1024)),
                ("email", models.EmailField(blank=True, max_length=254)),
            ],
            options={
                "verbose_name": "Property manager",
                "verbose_name_plural": "Property managers",
                "ordering": ["pk"],
                "indexes": [models.Index(fields=["name"], name="app_propert_name_11e57c_idx")],
            },
        ),
        migrations.CreateModel(
            name="PostalCode",
            fields=[
                (
                    "code",
                    models.CharField(max_length=5, primary_key=True, serialize=False, unique=True),
                ),
            ],
            options={
                "verbose_name": "Postal code",
                "verbose_name_plural": "Postal codes",
                "ordering": ["code"],
                "indexes": [models.Index(fields=["code"], name="app_postalc_code_1adc8d_idx")],
            },
        ),
        migrations.CreateModel(
            name="Ownership",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "percentage",
                    models.DecimalField(decimal_places=0, editable=False, max_digits=3),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="ownerships",
                        to="app.owner",
                    ),
                ),
                (
                    "sale",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ownerships",
                        to="app.sale",
                    ),
                ),
            ],
            options={
                "verbose_name": "Ownership",
                "verbose_name_plural": "Ownership",
                "ordering": ["pk"],
            },
        ),
        migrations.AddField(
            model_name="owner",
            name="sales",
            field=models.ManyToManyField(through="app.Ownership", to="app.sale"),
        ),
        migrations.AddField(
            model_name="housingcompany",
            name="postal_code",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="housing_companies",
                to="app.postalcode",
            ),
        ),
        migrations.AddField(
            model_name="housingcompany",
            name="property_manager",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="housing_companies",
                to="app.propertymanager",
            ),
        ),
        migrations.AddField(
            model_name="forwardonetoone",
            name="forward_one_to_one_field",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="forward_one_to_one_rel",
                to="app.forwardonetooneforrelated",
            ),
        ),
        migrations.AddField(
            model_name="forwardmanytoone",
            name="forward_many_to_one_field",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="forward_many_to_one_rels",
                to="app.forwardmanytooneforrelated",
            ),
        ),
        migrations.AddField(
            model_name="forwardmanytoone",
            name="forward_one_to_one_field",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="forward_many_to_one_rel",
                to="app.forwardonetooneforrelated",
            ),
        ),
        migrations.AddField(
            model_name="forwardmanytomany",
            name="forward_many_to_many_fields",
            field=models.ManyToManyField(
                related_name="forward_many_to_many_rels",
                to="app.forwardmanytomanyforrelated",
            ),
        ),
        migrations.AddField(
            model_name="forwardmanytomany",
            name="forward_many_to_one_field",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="forward_many_to_many_rels",
                to="app.forwardmanytooneforrelated",
            ),
        ),
        migrations.AddField(
            model_name="forwardmanytomany",
            name="forward_one_to_one_field",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="forward_many_to_many_rel",
                to="app.forwardonetooneforrelated",
            ),
        ),
        migrations.AddField(
            model_name="example",
            name="forward_many_to_many_fields",
            field=models.ManyToManyField(related_name="example_rels", to="app.forwardmanytomany"),
        ),
        migrations.AddField(
            model_name="example",
            name="forward_many_to_one_field",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="example_rels",
                to="app.forwardmanytoone",
            ),
        ),
        migrations.AddField(
            model_name="example",
            name="forward_one_to_one_field",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="example_rel",
                to="app.forwardonetoone",
            ),
        ),
        migrations.AddField(
            model_name="example",
            name="named_relation",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="+",
                to="app.housingcompany",
            ),
        ),
        migrations.AddField(
            model_name="example",
            name="symmetrical_field",
            field=models.ManyToManyField(to="app.example"),
        ),
        migrations.AddIndex(
            model_name="developer",
            index=models.Index(fields=["name"], name="app_develop_name_f98630_idx"),
        ),
        migrations.AddField(
            model_name="building",
            name="real_estate",
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to="app.realestate"),
        ),
        migrations.AddField(
            model_name="apartment",
            name="building",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="apartments",
                to="app.building",
            ),
        ),
        migrations.CreateModel(
            name="ApartmentProxy",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("app.apartment",),
        ),
        migrations.CreateModel(
            name="BuildingProxy",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("app.building",),
        ),
        migrations.CreateModel(
            name="DeveloperProxy",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("app.developer",),
        ),
        migrations.CreateModel(
            name="HousingCompanyProxy",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("app.housingcompany",),
        ),
        migrations.CreateModel(
            name="PropertyManagerProxy",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("app.propertymanager",),
        ),
        migrations.CreateModel(
            name="RealEstateProxy",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("app.realestate",),
        ),
        migrations.AddIndex(
            model_name="tag",
            index=models.Index(fields=["content_type", "object_id"], name="app_tag_content_936591_idx"),
        ),
        migrations.AddIndex(
            model_name="sale",
            index=models.Index(fields=["-purchase_date"], name="app_sale_purchas_b8219a_idx"),
        ),
        migrations.AddIndex(
            model_name="realestate",
            index=models.Index(fields=["name"], name="app_realest_name_ffcf70_idx"),
        ),
        migrations.AddIndex(
            model_name="owner",
            index=models.Index(fields=["name"], name="app_owner_name_e1732c_idx"),
        ),
        migrations.AddIndex(
            model_name="housingcompany",
            index=models.Index(fields=["name"], name="app_housing_name_dcd005_idx"),
        ),
        migrations.AddIndex(
            model_name="building",
            index=models.Index(fields=["name"], name="app_buildin_name_648aaa_idx"),
        ),
        migrations.AddIndex(
            model_name="apartment",
            index=models.Index(
                fields=["street_address", "stair", "-apartment_number"],
                name="app_apartme_street__740e26_idx",
            ),
        ),
    ]
